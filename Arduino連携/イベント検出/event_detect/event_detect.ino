/*******************************************************************************
*  電源が入ると，一定時間間隔でセンサ処理を行い，処理結果をシリアルコンソールで
*  外部に送信するプログラム
*******************************************************************************/

/*******************************************************************************
*  機能のON/OFFなど
*******************************************************************************/
// 特に無し

/*******************************************************************************
*  ピン番号の指定
*******************************************************************************/
/* 温度・湿度センサの接続先ピン(センサ処理の例のため) */
#define DHT_PIN 2            // DHTシリーズの温湿度センサを接続するピン番号
/*******************************************************************************
*  定数の指定
*******************************************************************************/
#define INTERVAL 5000    // センサのデータを読み取る間隔(単位ms)
#define THRESHOLD 28     // 気温が28度以上の場合は通知
/*******************************************************************************
*  センサ関係処理
*  注意事項 :
*    ・本来この部分はユーザが開発する
*    ・DHTシリーズのセンサを用いるこのプログラムはあくまでサンプル
*    ・今回使うのはDHTシリーズセンサ用ライブラリのうち，https://github.com/markruys/arduino-DHT
*******************************************************************************/
#include "DHT.h"

DHT dht;


/* センサの起動時の初期化処理 */
void setupSensor()
{
  dht.setup(DHT_PIN); // DHTをセットアップ
  Serial.println("Status\tHumidity (%)\tTemperature (C)\t(F)");
}

/* センサ処理 */
void getSensorValue(){
  delay(dht.getMinimumSamplingPeriod());
  float humidity = dht.getHumidity();
  float temperature = dht.getTemperature();

  if (THRESHOLD < temperature) {
    Serial.print(dht.getStatusString());
    Serial.print("\t");
    Serial.print(humidity, 1);
    Serial.print("\t\t");
    Serial.print(temperature, 1);
    Serial.print("\t\t");
    Serial.println(dht.toFahrenheit(temperature), 1);
  }
}
/*******************************************************************************
*  ここからプログラム本体
*******************************************************************************/
/*******************************************************************************
*  各種定義
*******************************************************************************/
// 特になし
/*******************************************************************************
*  初期化処理
*******************************************************************************/
void setup()
{
  Serial.begin(9600);
  Serial.println();
  setupSensor();
}

/*******************************************************************************
*  ループ
*******************************************************************************/
void loop()
{
  getSensorValue();
  delay(INTERVAL);
}

